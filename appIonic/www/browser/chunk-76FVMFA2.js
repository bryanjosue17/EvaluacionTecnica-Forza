import{a as k}from"./chunk-YBY7T5CB.js";import{b as E}from"./chunk-NUEAGB3S.js";import{c as q}from"./chunk-VQTON5AL.js";import{Kb as I,b as C,c as g,e as n,f as h,g as c,i as y,l,n as d,p as i,r as p,u as $,v as f,ya as b}from"./chunk-V5BBYBEN.js";import{g as r}from"./chunk-LDRJ6W7P.js";var m=k("Network",{web:()=>import("./chunk-33QTEU7Q.js").then(s=>new s.NetworkWeb)});var x=(()=>{class s{constructor(e){this.storage=e,this._online$=new g(!0),this.online$=this._online$.asObservable(),this.CART_CACHE_KEY="cart.cache",this.QUEUE_KEY="cart.queue",this.ready=r(this,null,function*(){yield this.storage.create()}),m.addListener("networkStatusChange",t=>this._online$.next(t.connected)),m.getStatus().then(t=>this._online$.next(t.connected))}isOnline(){return r(this,null,function*(){return(yield m.getStatus()).connected})}getCachedCart(){return r(this,null,function*(){return yield this.ready,yield this.storage.get(this.CART_CACHE_KEY)})}setCachedCart(e){return r(this,null,function*(){yield this.ready,yield this.storage.set(this.CART_CACHE_KEY,e)})}enqueue(e){return r(this,null,function*(){yield this.ready;let t=(yield this.storage.get(this.QUEUE_KEY))??[];t.push(e),yield this.storage.set(this.QUEUE_KEY,t)})}dequeueAll(){return r(this,null,function*(){yield this.ready;let e=(yield this.storage.get(this.QUEUE_KEY))??[];return yield this.storage.set(this.QUEUE_KEY,[]),e})}peekQueue(){return r(this,null,function*(){return yield this.ready,(yield this.storage.get(this.QUEUE_KEY))??[]})}buildItem(e,t){return{id:crypto.randomUUID(),ts:Date.now(),kind:e,payload:t}}static{this.\u0275fac=function(t){return new(t||s)($(E))}}static{this.\u0275prov=p({token:s,factory:s.\u0275fac,providedIn:"root"})}}return s})();var D=(()=>{class s{constructor(){this.http=f(b),this.offline=f(x),this.toast=f(q),this.base=I.apiBase,this.cartChanged$=new C}getCart(){return n(this.offline.isOnline()).pipe(d(e=>e?this.http.get(`${this.base}/orders/cart`).pipe(i(t=>this.offline.setCachedCart(t))):n(this.offline.getCachedCart()).pipe(y(t=>t??{cartId:null,items:[],total:0}))),l(e=>(this.toast.show("No se pudo obtener el carrito","danger"),h({cartId:null,items:[],total:0}))))}addToCart(e){return n(this.offline.isOnline()).pipe(d(t=>t?this.http.post(`${this.base}/orders/cart/items`,e).pipe(i(()=>this.cartChanged$.next())):n(this.applyLocalAdd(e)).pipe(i(()=>this.cartChanged$.next()))),i(()=>this.toast.show("Producto agregado","success")),l(t=>(this.toast.show("No se pudo agregar","danger"),h(null))))}updateQty(e,t){return n(this.offline.isOnline()).pipe(d(a=>a?this.http.put(`${this.base}/orders/cart/items/${e}`,{qty:t}).pipe(i(()=>this.cartChanged$.next())):n(this.applyLocalUpdate(e,t)).pipe(i(()=>this.cartChanged$.next()))),l(a=>(this.toast.show("No se pudo actualizar cantidad","danger"),h(null))))}removeFromCart(e){return n(this.offline.isOnline()).pipe(d(t=>t?this.http.delete(`${this.base}/orders/cart/items/${e}`).pipe(i(()=>this.cartChanged$.next())):n(this.applyLocalRemove(e)).pipe(i(()=>this.cartChanged$.next()))),i(()=>this.toast.show("\xCDtem eliminado","success")),l(t=>(this.toast.show("No se pudo eliminar","danger"),h(null))))}clearCart(){return n(this.offline.isOnline()).pipe(d(e=>e?this.http.delete(`${this.base}/orders/cart`).pipe(i(()=>this.cartChanged$.next())):n(this.applyLocalClear()).pipe(i(()=>this.cartChanged$.next()))),i(()=>this.toast.show("Carrito vaciado","success")),l(e=>(this.toast.show("No se pudo vaciar","danger"),h(null))))}checkoutFromCart(){return n(this.offline.isOnline()).pipe(d(e=>e?this.http.post(`${this.base}/orders/checkout-from-cart`,{}).pipe(i(()=>this.cartChanged$.next())):n(this.offline.enqueue(this.offline.buildItem("checkout",{}))).pipe(i(()=>this.cartChanged$.next()))),i(()=>this.toast.show("Checkout iniciado","success")),l(e=>(this.toast.show("No se pudo completar el checkout","danger"),h(null))))}applyLocalAdd(e){return r(this,null,function*(){let t=(yield this.offline.getCachedCart())??{cartId:null,items:[],total:0},a=t.items.findIndex(o=>o.productId===e.productId);return a>=0?t.items[a].qty+=e.qty:t.items.push({itemId:Date.now(),productId:e.productId,name:e.name??"",unitPrice:e.unitPrice,qty:e.qty}),t.total=t.items.reduce((o,u)=>o+u.unitPrice*u.qty,0),yield this.offline.setCachedCart(t),yield this.offline.enqueue(this.offline.buildItem("add",e)),t})}applyLocalUpdate(e,t){return r(this,null,function*(){let a=(yield this.offline.getCachedCart())??{cartId:null,items:[],total:0},o=a.items.find(u=>u.itemId===e);return o&&(o.qty=t,a.total=a.items.reduce((u,w)=>u+w.unitPrice*w.qty,0)),yield this.offline.setCachedCart(a),yield this.offline.enqueue(this.offline.buildItem("update",{itemId:e,qty:t})),a})}applyLocalRemove(e){return r(this,null,function*(){let t=(yield this.offline.getCachedCart())??{cartId:null,items:[],total:0};return t.items=t.items.filter(a=>a.itemId!==e),t.total=t.items.reduce((a,o)=>a+o.unitPrice*o.qty,0),yield this.offline.setCachedCart(t),yield this.offline.enqueue(this.offline.buildItem("remove",{itemId:e})),t})}applyLocalClear(){return r(this,null,function*(){let e={cartId:null,items:[],total:0};return yield this.offline.setCachedCart(e),yield this.offline.enqueue(this.offline.buildItem("clear",{})),e})}runSync(){return r(this,null,function*(){if(!(yield this.offline.isOnline()))return;let e=yield this.offline.peekQueue();if(e.length)try{for(let t of e)t.kind==="add"?yield c(this.http.post(`${this.base}/orders/cart/items`,t.payload)):t.kind==="update"?yield c(this.http.put(`${this.base}/orders/cart/items/${t.payload.itemId}`,{qty:t.payload.qty})):t.kind==="remove"?yield c(this.http.delete(`${this.base}/orders/cart/items/${t.payload.itemId}`)):t.kind==="clear"?yield c(this.http.delete(`${this.base}/orders/cart`)):t.kind==="checkout"&&(yield c(this.http.post(`${this.base}/orders/checkout-from-cart`,{})))}finally{yield this.offline.dequeueAll(),this.cartChanged$.next();try{let t=yield c(this.http.get(`${this.base}/orders/cart`));yield this.offline.setCachedCart(t)}catch{}}})}static{this.\u0275fac=function(t){return new(t||s)}}static{this.\u0275prov=p({token:s,factory:s.\u0275fac,providedIn:"root"})}}return s})();export{D as a};
